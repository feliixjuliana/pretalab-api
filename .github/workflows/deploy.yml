name: deploy-test
on:
  push:
    branches: 
      - main
  pull_request:
    branches:
      - main
jobs:
  test-unit:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - name: Install dependencies
        run: npm install
      - name: npm test unit
        run: npm run test:unit

  test-integration:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - name: Install dependencies
        run: npm install
      - name: npm test integration
        env:
          MONGO_TEST_URL: ${{secrets.MONGO_TEST_URL}}
        run: npm run test:integration

  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    needs:
      - test-unit
      - test-integration

    permissions:
      contents: "read"
      id-token: "write"
    env:
      MONGO_URL: ${{secrets.MONGO_URL}}
      PORT: 3000

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Google Auth
        id: auth
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GCP_SA_KEY }}"

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ secrets.SERVICE_NAME }}
          region: ${{ secrets.SERVICE_REGION }}
          source: ./
          env_vars: 
            MONGO_URL = ${{secrets.MONGO_URL}}

      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
        
       